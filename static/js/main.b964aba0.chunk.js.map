{"version":3,"sources":["components/ListView/ListView.js","components/Login/Login.js","components/Register/Register.js","components/ToDo/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["ListView","props","addTask","axios","get","then","response","setState","newList","data","index","newTask","state","id","task","length","push","setTimeout","put","componentDidMount","saveChanges","changeTaskName","changeTaskId","name","changeListName","deleteTask","e","splice","target","toggleListView","deleteList","lists","isDone","headers","this","className","filter","list","map","type","placeholder","defaultValue","onChange","value","tasks","onClick","icon","faTimes","key","React","Component","authAxios","create","baseURL","Authorization","Login","toggle","logged","postLogin","changeHandler","identifier","password","post","console","log","catch","error","ref","containerRef","Register","submitHandler","preventDefault","loadout","username","email","check","faLongArrowAltLeft","onSubmit","ToDo","getKeyOfList","undefined","indexOfList","getAttribute","viewList","listItemOnClick","filterBySearch","addList","placeholderList","delete","renderToDo","dataFromChild","searchingPhrase","faSignOutAlt","toLowerCase","includes","search","faThumbtack","onClickCapture","faCheckSquare","faPlus","App","toggleLoginAndRegister","loginView","logIn","loggedIn","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b964aba0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport './ListView.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ListView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lists: [],\r\n            index: 0,\r\n            changeListName: \"\",\r\n            newList: {},\r\n            newTask: {\r\n                id: 5,\r\n                name: \"\",\r\n                isDone: false,\r\n            },\r\n            changeTaskName: \"\",\r\n            changeTaskId: \"\",\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8000/to-do-lists', {\r\n            headers: {\r\n                'Authorization': 'Bearer siema'\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.setState({ lists: response.data })\r\n            })\r\n    }\r\n\r\n    addTask = () => {\r\n        axios.get('http://localhost:8000/to-do-lists')\r\n            .then(response => {\r\n                /* Find the list and get it to the this.state variable */\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n\r\n            })\r\n            .then(response => {\r\n                /* Create newTask and place it in newTask state */\r\n                this.setState({\r\n                    newTask: {\r\n                        ...this.state.newTask,\r\n                        id: this.state.newList.task.length + 1,\r\n                    }\r\n                })\r\n                /* Add an array object to variable that represents state of list on server */\r\n                this.state.newList.task.push(this.state.newTask)\r\n            })\r\n\r\n        /* Build new task in a certain list using cloned list piece */\r\n        setTimeout(() => {\r\n            axios.put('http://localhost:8000/to-do-lists/' + this.props.index, {\r\n                ...this.state.newList,\r\n                task: [\r\n                    ...this.state.newList.task,\r\n                ]\r\n            }).then(() => {\r\n                /* Refresh the ViewList to see the changes on server */\r\n                this.componentDidMount()\r\n            })\r\n        }, 500)\r\n\r\n    }\r\n\r\n    saveChanges = () => {\r\n        /* Get the list to save it in newList state, then change it's list name to given in input */\r\n        axios.get('http://localhost:8000/to-do-lists')\r\n            .then(response => {\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n            })\r\n            .then(() => {\r\n                /* IMPORTANT I have to find out how to setState of IN ARRAY thimg like below without mutating this state */\r\n                if (this.state.changeTaskName !== \"\" && this.state.changeTaskId !== \"\") {\r\n                    this.state.newList.task[this.state.changeTaskId - 1].name = this.state.changeTaskName\r\n                }\r\n            })\r\n\r\n        setTimeout(() => {\r\n            if (this.state.changeListName === \"\") {\r\n                this.setState({\r\n                    changeListName: this.state.newList.name,\r\n                })\r\n            }\r\n\r\n            axios.put('http://localhost:8000/to-do-lists/' + this.props.index, {\r\n                ...this.state.newList,\r\n                name: this.state.changeListName,\r\n                task: [\r\n                    ...this.state.newList.task,\r\n                ]\r\n            }).then(() => {\r\n                this.componentDidMount()\r\n            })\r\n        }, 500)\r\n\r\n    }\r\n\r\n    deleteTask = (e) => {\r\n        axios.get('http://localhost:8000/to-do-lists')\r\n            .then(response => {\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.state.newList.task.splice(e.target.id - 1, 1)\r\n            })\r\n\r\n        setTimeout(() => {\r\n            axios.put('http://localhost:8000/to-do-lists/' + this.props.index,\r\n                this.state.newList\r\n            )\r\n                .then(() => {\r\n                    this.componentDidMount()\r\n                })\r\n        }, 500)\r\n    }\r\n\r\n    toggleListView = () => {\r\n        this.props.toggleListView()\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { lists } = this.state\r\n\r\n        return (\r\n            <div className=\"listView\">\r\n                {/* Display the name of the last clicked list! */}\r\n                {lists.length ?\r\n                    lists.filter(list => list.id === this.props.index).map(list =>\r\n                        <span className=\"listSection\">\r\n                            <input type=\"text\" placeholder=\"List name\" defaultValue={list.name} onChange={(e) => this.setState({ changeListName: e.target.value })} className=\"listName\"></input>\r\n                        </span>) :\r\n                    \"\"\r\n                }\r\n\r\n                {/* Sort and filter the list that will be displayed*/}\r\n                {lists.length ?\r\n                    lists.filter(list => list.id === this.props.index).map(list =>\r\n                        <div className=\"tasks\" key={list.key}>\r\n\r\n                            {/* These are form inputs and checkmark for every task */}\r\n                            {list.task.map(tasks =>\r\n                                <form className=\"tasksForm\" key={list.key}>\r\n                                    <input type=\"checkbox\" className=\"checkBox\"></input>\r\n                                    <input type=\"text\" placeholder=\"Task name\" className=\"taskNameInput\" id={tasks.id} onChange={(e) => this.setState({\r\n                                        changeTaskName: e.target.value\r\n                                    })} onClick={(e) => this.setState({\r\n                                        changeTaskId: e.target.id\r\n                                    })} defaultValue={tasks.name}></input>\r\n                                    <span className=\"checkmark\"></span>\r\n                                    <span className=\"coverSpan\">\r\n                                        <FontAwesomeIcon icon={faTimes} className=\"deleteTask\" id={tasks.id} onClick={this.deleteTask} />\r\n                                    </span>\r\n                                </form>\r\n                            )}\r\n                        </div>) :\r\n                    \"\"\r\n                }\r\n                {/* Usage buttons on the display view*/}\r\n                <button className=\"addBtn\" type=\"submit\" onClick={this.addTask}> ADD TASK </button>\r\n                <button className=\"cancelAddBtn\" onClick={this.deleteList}> DELETE LIST </button>\r\n                <a className=\"cancelBtn\" onClick={this.toggleListView}>CANCEL</a>\r\n                <button className=\"saveBtn\" type=\"submit\" onClick={this.saveChanges}>SAVE</button>\r\n            </div>\r\n        );\r\n    }\r\n} export default ListView;","import React from 'react';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\nconst accesToken = 'siema';\r\nconst apiUrl = 'http://localhost:8000';\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    Authorization: `Bearer ${accesToken}`\r\n  }\r\n})\r\n\r\nclass Login extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      identifier:\"\",\r\n      password:\"\",\r\n    }\r\n  }\r\n\r\n  postLogin() {\r\n\r\n    const postLogin = authAxios.post(`/login`, this.state)\r\n    .then(response => {\r\n      console.log(response)\r\n      console.log(postLogin)\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      console.log(':(')\r\n    })\r\n  }\r\n  \r\n  \r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n\r\n    logged = () => {\r\n      this.postLogin()\r\n        this.props.logged()\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n    render(){\r\n        const {identifier, password} = this.state;\r\n  return (\r\n    <div className=\"Login\" ref={this.props.containerRef}>\r\n      <div className=\"window\">\r\n          <h1 className=\"loginHeader\">Login</h1>\r\n          <input className=\"username\" name=\"identifier\" placeholder=\"E-mail or Username\" value={identifier} onChange={this.changeHandler}></input>\r\n          <input type=\"password\" className=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.changeHandler}></input>\r\n          <button className=\"loginBtn\" onClick={this.logged}>Login</button>\r\n          <p className=\"smallOr\"> or </p>\r\n          <a className=\"createAccount\" ref={this.props.containerRef} onClick={this.toggle}> create an account </a>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport './Register.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\n\r\nconst accesToken = 'siema';\r\nconst apiUrl = 'http://localhost:8000';\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    Authorization: `Bearer ${accesToken}`\r\n  }\r\n})\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n           username:\"\", \r\n           email: \"\", \r\n           password: \"\"\r\n        }\r\n    }\r\n    \r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        let loadout = authAxios.post(`/register`, this.state)\r\n            .then(response => {\r\n                console.log(response)\r\n                console.log(loadout)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const {username, email, password, check} = this.state\r\n        return(\r\n            <div className=\"register\" ref={this.props.containerRef}>\r\n                <FontAwesomeIcon icon={faLongArrowAltLeft} onClick={this.toggle} className=\"back\" />\r\n                <h1 className=\"registerHeader\"> Create a new account </h1>\r\n                <form onSubmit={this.submitHandler}>\r\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" className=\"inputs\" value={username} onChange={this.changeHandler}/>\r\n                <input type=\"email\" placeholder=\"E-mail\" name=\"email\"  className=\"inputs\" value={email} onChange={this.changeHandler}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\"  className=\"inputs\" value={password} onChange={this.changeHandler}/>\r\n                <input type=\"password\" placeholder=\"Repeat password\" name=\"password\"  className=\"inputs\" value={check} onChange={this.changeHandler}/>\r\n                <button type=\"submit\" className=\"createBtn\"> Create </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n} \r\nexport default Register;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAssistiveListeningSystems, faSignOutAlt, faPlus, faCheckSquare, faThumbtack } from '@fortawesome/free-solid-svg-icons';\r\nimport './ToDo.css';\r\nimport ListView from \"../ListView/ListView\";\r\nimport axios from \"axios\";\r\n\r\nclass ToDo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lists: [],\r\n            viewList: false,\r\n            indexOfList: 0,\r\n            renderToDo: false,\r\n            dataFromChild: \"\",\r\n            newList: {\r\n                id: \"\",\r\n                name:\"I'm nameless list :(\",\r\n                task:[]\r\n            },\r\n            searchingPhrase: \"\",\r\n            placeholderList:{},\r\n        }\r\n    }\r\n\r\n\r\n    logged = () => {\r\n        this.props.logged();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8000/to-do-lists', {\r\n            headers: {\r\n                'Authorization': 'Bearer siema'\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.setState({ lists: response.data })\r\n            })\r\n            .catch(error => {\r\n                //console.log(error)\r\n            })\r\n    }\r\n\r\n    getKeyOfList = (e) => {\r\n        if (e !== undefined) {\r\n            this.setState({\r\n                indexOfList: e.target.getAttribute('index')\r\n            });\r\n            //console.log(e.target)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    toggleListView = () => {\r\n        if (this.state.viewList === false) {\r\n            this.setState({\r\n                viewList: true,\r\n            });\r\n\r\n\r\n        } else {\r\n            this.setState({\r\n                viewList: false,\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    listItemOnClick = () => {\r\n        this.getKeyOfList()\r\n        this.toggleListView()\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.componentDidMount()\r\n    }\r\n\r\n    filterBySearch = () =>{\r\n\r\n    }\r\n\r\n    addList = () => {\r\n\r\n        /* First get the info about lists to write it down in a var */\r\n        axios.get('http://localhost:8000/to-do-lists')\r\n        .then(response => {\r\n            /* Write down all lists in lists var */\r\n            this.setState({ lists: response.data })\r\n        })\r\n        .then(() => {\r\n            this.setState({\r\n                newList: {\r\n                    ...this.state.newList,\r\n                    id: this.state.lists.length +1,\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        axios.post('http://localhost:8000/to-do-lists', {\r\n            ...this.state.newList\r\n        })\r\n        .then(response => {\r\n        })\r\n    }\r\n\r\n    deleteList = (e) => {\r\n        axios.get('http://localhost:8000/to-do-lists')\r\n        .then(response => {\r\n            this.setState({\r\n                placeholderList: response.data[this.props.index - 1],\r\n            })\r\n        })\r\n\r\n        axios.delete('http://localhost:8000/to-do-lists/' + this.state.indexOfList)\r\n        .then(response => {\r\n            this.componentDidMount()\r\n        })\r\n\r\n        this.setState({\r\n            viewList:false,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { lists, viewList, indexOfList, renderToDo } = this.state;\r\n        return (\r\n            <div className=\"toDo\">\r\n                <FontAwesomeIcon icon={faSignOutAlt} className=\"logOut\" onClick={this.logged} />\r\n                <input placeholder=\"Search for lists!\" className=\"searchInput\" onChange={(e) => this.setState({ searchingPhrase: e.target.value.toLowerCase() })}/>\r\n                <div className=\"mainBody\">\r\n                    <div className=\"lists\">\r\n                        {lists.filter((list) => {\r\n                            if (this.state.searchingPhrase === \"\"){\r\n                                return list.name\r\n                            } else if (list.name.toLowerCase().includes(this.state.searchingPhrase.toLowerCase())) {\r\n                                return list.name\r\n                            }\r\n                        }).map((list, search) => (\r\n                        <span className=\"pinSpan\">\r\n                        <FontAwesomeIcon icon={faThumbtack} className=\"pinIcon\"/>\r\n                        <div className=\"list\" onClick={this.listItemOnClick} onClickCapture={() => this.setState({ indexOfList: list.id })} key={list.id} index={list.id}  >\r\n                            <h3>{list.name}</h3>\r\n                            <p> created today</p>\r\n                            <span className=\"tasksDone\">\r\n                                <p> Tasks: {list.task.length}</p>\r\n                                <FontAwesomeIcon icon={faCheckSquare} className=\"doneIcon\"/>\r\n                                <p>/{list.task.length} all</p>\r\n                            </span>\r\n                        </div>\r\n                        <FontAwesomeIcon icon={faThumbtack}  className=\"pinIcon\"/>\r\n                        </span>\r\n                        ))}\r\n                        {viewList && <ListView toggleListView={this.toggleListView} index={indexOfList} renderToDo={renderToDo} deleteList={this.deleteList}/>}\r\n                    </div>\r\n                </div>\r\n                <span className=\"addNewList\">\r\n                <FontAwesomeIcon icon={faPlus} className=\"plusList\" onClick={this.addList}/>\r\n                <p className=\"plusListDescription\"> add new list </p>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ToDo;","import React from 'react';\nimport './App.css';\nimport ListView from './components/ListView/ListView';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport ToDo from './components/ToDo/ToDo';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginView: true,\n      loggedIn: false,\n      viewList: false,\n    }\n    this.toggleLoginAndRegister = this.toggleLoginAndRegister.bind(this);\n  }\n\n  toggleLoginAndRegister = () => {\n    if (this.state.loginView === true) {\n      this.setState({\n        loginView: false,\n      });\n    } else {\n      this.setState({\n        loginView: true,\n      });\n    }\n  }\n\n  logIn = () => {\n    if(this.state.loggedIn === false){\n      this.setState({\n      loggedIn: true,\n    })\n  } else {\n    this.setState({\n      loggedIn: false,\n    })\n  }\n  }\n\n\n  render() {\n    const { loginView, loggedIn, viewList } = this.state;\n    return (\n      <div className=\"App\">\n        {loginView && !loggedIn && <Login toggle={this.toggleLoginAndRegister} logged={this.logIn} />}\n        {!loginView && !loggedIn && <Register toggle={this.toggleLoginAndRegister} />}\n        {loggedIn && <ToDo logged={this.logIn} toggleListView={this.toggleListView} viewList={this.viewList}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}