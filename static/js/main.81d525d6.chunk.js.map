{"version":3,"sources":["components/ListView/ListView.js","components/Login/Login.js","components/Register/Register.js","components/ToDo/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["REACT_APP_DB_HOST","process","ListView","props","addTask","axios","get","then","response","setState","newList","data","index","newTask","state","id","task","length","push","put","componentDidMount","saveChanges","changeTaskName","changeTaskId","name","changeListName","deleteTask","e","console","log","target","render","toggleListView","deleteList","lists","isDone","headers","this","className","filter","list","map","type","placeholder","defaultValue","onChange","value","tasks","onClick","icon","faTimes","key","React","Component","authAxios","create","baseURL","Authorization","Login","toggle","logged","postLogin","changeHandler","identifier","password","post","catch","error","ref","containerRef","Register","submitHandler","preventDefault","loadout","username","email","check","faLongArrowAltLeft","onSubmit","ToDo","getKeyOfList","undefined","indexOfList","getAttribute","viewList","listItemOnClick","filterBySearch","addList","placeholderList","delete","renderToDo","dataFromChild","searchingPhrase","faSignOutAlt","toLowerCase","includes","search","faThumbtack","onClickCapture","faCheckSquare","faPlus","App","toggleLoginAndRegister","loginView","logIn","loggedIn","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d525d6.chunk.js","sourcesContent":["\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport './ListView.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst {REACT_APP_DB_HOST} = process.env;\r\n\r\nclass ListView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lists: [],\r\n            index: 0,\r\n            changeListName: \"\",\r\n            newList: {},\r\n            newTask: {\r\n                id: 5,\r\n                name: \"\",\r\n                isDone: false,\r\n            },\r\n            changeTaskName: \"\",\r\n            changeTaskId: \"\",\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`, {\r\n            headers: {\r\n                'Authorization': 'Bearer siema'\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.setState({ lists: response.data })\r\n            })\r\n    }\r\n\r\n    addTask = () => {\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`)\r\n            .then(response => {\r\n                /* Find the list and get it to the this.state variable */\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n\r\n            })\r\n            .then(response => {\r\n                /* Create newTask and place it in newTask state */\r\n                this.setState({\r\n                    newTask: {\r\n                        ...this.state.newTask,\r\n                        id: this.state.newList.task.length + 1,\r\n                    }\r\n                })\r\n                /* Add an array object to variable that represents state of list on server */\r\n                this.state.newList.task.push(this.state.newTask)\r\n            })\r\n            .then(() => {\r\n                        /* Build new task in a certain list using cloned list piece */\r\n                axios.put(`${REACT_APP_DB_HOST}to-do-lists/${this.props.index}`, {\r\n                    ...this.state.newList,\r\n                    task: [\r\n                        ...this.state.newList.task,\r\n                    ]\r\n                }).then(() => {\r\n                    /* Refresh the ViewList to see the changes on server */\r\n                    this.componentDidMount()\r\n                })\r\n            })\r\n    }\r\n\r\n    saveChanges = () => {\r\n        /* Get the list to save it in newList state, then change it's list name to given in input */\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`)\r\n            .then(response => {\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n            })\r\n            .then(() => {\r\n                /* IMPORTANT I have to find out how to setState of IN ARRAY thimg like below without mutating this state */\r\n                if (this.state.changeTaskName !== \"\" && this.state.changeTaskId !== \"\") {\r\n                    this.state.newList.task[this.state.changeTaskId - 1].name = this.state.changeTaskName\r\n                }\r\n\r\n                if(this.state.changeListName !==\"\"){\r\n                    this.state.newList.name = this.state.changeListName\r\n                }\r\n            })\r\n            .then(() => {\r\n                axios.put(`${REACT_APP_DB_HOST}to-do-lists/${this.props.index}`, {\r\n                    ...this.state.newList,\r\n                    task: [\r\n                        ...this.state.newList.task,\r\n                    ]\r\n                }).then(() => {\r\n                    this.componentDidMount()\r\n                })\r\n            })\r\n    }\r\n\r\n    deleteTask = (e) => {\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`)\r\n            .then(response => {\r\n                this.setState({\r\n                    newList: response.data[this.props.index - 1],\r\n                })\r\n            })\r\n            .then(() => {\r\n                console.log('xd: ' + e.target.id)\r\n                //this.state.newList.task.splice(e.target.id, 1)\r\n\r\n                /*for (var i = 0; i < this.state.newList.task.length; i++) {\r\n                    var obj = this.state.newList.task[i];\r\n                \r\n                    if (e.target.id.indexOf(obj.id) !== -1) {\r\n                        this.state.newList.task.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }*/ \r\n\r\n                axios.put(`${REACT_APP_DB_HOST}to-do-lists/${this.props.index}`,\r\n                this.state.newList\r\n            )\r\n                .then(() => {\r\n                    this.componentDidMount()\r\n                    this.render()\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    toggleListView = () => {\r\n        this.props.toggleListView()\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList()\r\n    }\r\n\r\n    render() {\r\n        const { lists } = this.state\r\n        return (\r\n            <div className=\"listView\">\r\n                {/* Display the name of the last clicked list! */}\r\n                {lists.length ?\r\n                    lists.filter(list => list.id === this.props.index).map(list =>\r\n                        <span className=\"listSection\">\r\n                            <input type=\"text\" placeholder=\"List name\" defaultValue={list.name} onChange={(e) => this.setState({ changeListName: e.target.value })} className=\"listName\"></input>\r\n                        </span>) :\r\n                    \"\"\r\n                }\r\n\r\n                {/* Sort and filter the list that will be displayed*/}\r\n                {lists.length ?\r\n                    lists.filter(list => list.id === this.props.index).map(list =>\r\n                        <div className=\"tasks\" key={list.key}>\r\n\r\n                            {/* These are form inputs and checkmark for every task */}\r\n                            {list.task.map(tasks =>\r\n                                <form className=\"tasksForm\" key={list.key}>\r\n                                    <input type=\"checkbox\" className=\"checkBox\"></input>\r\n                                    <input type=\"text\" placeholder=\"Task name\" className=\"taskNameInput\" key={list.id} id={tasks.id} onChange={(e) => this.setState({\r\n                                        changeTaskName: e.target.value\r\n                                    })} onClick={(e) => this.setState({\r\n                                        changeTaskId: e.target.id\r\n                                    })} defaultValue={tasks.name}></input>\r\n                                    <span className=\"checkmark\"></span>\r\n                                    <span className=\"coverSpan\">\r\n                                        <FontAwesomeIcon icon={faTimes} className=\"deleteTask\" id={tasks.id-1} onClick={this.deleteTask} />\r\n                                    </span>\r\n                                </form>\r\n                            )}\r\n                        </div>) :\r\n                    \"\"\r\n                }\r\n                {/* Usage buttons on the display view*/}\r\n                <button className=\"addBtn\" type=\"submit\" onClick={this.addTask}> ADD TASK </button>\r\n                <button className=\"cancelAddBtn\" onClick={this.deleteList}> DELETE LIST </button>\r\n                <a className=\"cancelBtn\" onClick={this.toggleListView}>CANCEL</a>\r\n                <button className=\"saveBtn\" type=\"submit\" onClick={this.saveChanges}>SAVE</button>\r\n            </div>\r\n        );\r\n    }\r\n} export default ListView;","import React from 'react';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\nconst accesToken = 'siema';\r\nconst apiUrl = 'http://localhost:8000';\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    Authorization: `Bearer ${accesToken}`\r\n  }\r\n})\r\n\r\nclass Login extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      identifier:\"\",\r\n      password:\"\",\r\n    }\r\n  }\r\n\r\n  postLogin() {\r\n\r\n    const postLogin = authAxios.post(`/login`, this.state)\r\n    .then(response => {\r\n      console.log(response)\r\n      console.log(postLogin)\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      console.log(':(')\r\n    })\r\n  }\r\n  \r\n  \r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n\r\n    logged = () => {\r\n      this.postLogin()\r\n        this.props.logged()\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n    render(){\r\n        const {identifier, password} = this.state;\r\n  return (\r\n    <div className=\"Login\" ref={this.props.containerRef}>\r\n      <div className=\"window\">\r\n          <h1 className=\"loginHeader\">Login</h1>\r\n          <input className=\"username\" name=\"identifier\" placeholder=\"E-mail or Username\" value={identifier} onChange={this.changeHandler}></input>\r\n          <input type=\"password\" className=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={this.changeHandler}></input>\r\n          <button className=\"loginBtn\" onClick={this.logged}>Login</button>\r\n          <p className=\"smallOr\"> or </p>\r\n          <a className=\"createAccount\" ref={this.props.containerRef} onClick={this.toggle}> create an account </a>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport './Register.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\n\r\nconst accesToken = 'siema';\r\nconst apiUrl = 'http://localhost:8000';\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    Authorization: `Bearer ${accesToken}`\r\n  }\r\n})\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n           username:\"\", \r\n           email: \"\", \r\n           password: \"\"\r\n        }\r\n    }\r\n    \r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        let loadout = authAxios.post(`/register`, this.state)\r\n            .then(response => {\r\n                console.log(response)\r\n                console.log(loadout)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const {username, email, password, check} = this.state\r\n        return(\r\n            <div className=\"register\" ref={this.props.containerRef}>\r\n                <FontAwesomeIcon icon={faLongArrowAltLeft} onClick={this.toggle} className=\"back\" />\r\n                <h1 className=\"registerHeader\"> Create a new account </h1>\r\n                <form onSubmit={this.submitHandler}>\r\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" className=\"inputs\" value={username} onChange={this.changeHandler}/>\r\n                <input type=\"email\" placeholder=\"E-mail\" name=\"email\"  className=\"inputs\" value={email} onChange={this.changeHandler}/>\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\"  className=\"inputs\" value={password} onChange={this.changeHandler}/>\r\n                <input type=\"password\" placeholder=\"Repeat password\" name=\"password\"  className=\"inputs\" value={check} onChange={this.changeHandler}/>\r\n                <button type=\"submit\" className=\"createBtn\"> Create </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n} \r\nexport default Register;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAssistiveListeningSystems, faSignOutAlt, faPlus, faCheckSquare, faThumbtack } from '@fortawesome/free-solid-svg-icons';\r\nimport './ToDo.css';\r\nimport ListView from \"../ListView/ListView\";\r\nimport axios from \"axios\";\r\n\r\nconst {REACT_APP_DB_HOST} = process.env;\r\n\r\nclass ToDo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lists: [],\r\n            viewList: false,\r\n            indexOfList: 0,\r\n            renderToDo: false,\r\n            dataFromChild: \"\",\r\n            newList: {\r\n                id: \"\",\r\n                name: \"I'm nameless list :(\",\r\n                task: []\r\n            },\r\n            searchingPhrase: \"\",\r\n            placeholderList: {},\r\n        }\r\n    }\r\n\r\n\r\n    logged = () => {\r\n        this.props.logged();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`, {\r\n            headers: {\r\n                'Authorization': 'Bearer siema'\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.setState({ lists: response.data })\r\n            })\r\n            .catch(error => {\r\n                //console.log(error)\r\n            })\r\n    }\r\n\r\n    getKeyOfList = (e) => {\r\n        if (e !== undefined) {\r\n            this.setState({\r\n                indexOfList: e.target.getAttribute('index')\r\n            });\r\n            //console.log(e.target)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    toggleListView = () => {\r\n        if (this.state.viewList === false) {\r\n            this.setState({\r\n                viewList: true,\r\n            });\r\n\r\n\r\n        } else {\r\n            this.setState({\r\n                viewList: false,\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    listItemOnClick = () => {\r\n        this.getKeyOfList()\r\n        this.toggleListView()\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.componentDidMount()\r\n    }\r\n\r\n    filterBySearch = () => {\r\n\r\n    }\r\n\r\n    addList = () => {\r\n\r\n        /* First get the info about lists to write it down in a var */\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`)\r\n            .then(response => {\r\n                /* Write down all lists in lists var */\r\n                this.setState({ lists: response.data })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    newList: {\r\n                        ...this.state.newList,\r\n                        id: this.state.lists.length + 1,\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                axios.post(`${REACT_APP_DB_HOST}to-do-lists/`, {\r\n                    ...this.state.newList\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    deleteList = (e) => {\r\n        axios.get(`${REACT_APP_DB_HOST}to-do-lists/`)\r\n            .then(response => {\r\n                this.setState({\r\n                    placeholderList: response.data[this.props.index - 1],\r\n                })\r\n            })\r\n            .then(() => {\r\n                axios.delete(`${REACT_APP_DB_HOST}to-do-lists/${this.state.indexOfList}`)\r\n            .then(() => {\r\n                this.componentDidMount()\r\n            })\r\n\r\n        this.setState({\r\n            viewList: false,\r\n        })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { lists, viewList, indexOfList, renderToDo } = this.state;\r\n        return (\r\n            <div className=\"toDo\">\r\n                <FontAwesomeIcon icon={faSignOutAlt} className=\"logOut\" onClick={this.logged} />\r\n                <input placeholder=\"Search for lists!\" className=\"searchInput\" onChange={(e) => this.setState({ searchingPhrase: e.target.value.toLowerCase() })} />\r\n                <div className=\"mainBody\">\r\n                    <div className=\"lists\">\r\n                        {lists.filter((list) => {\r\n                            if (this.state.searchingPhrase === \"\") {\r\n                                return list.name\r\n                            } else if (list.name.toLowerCase().includes(this.state.searchingPhrase.toLowerCase())) {\r\n                                return list.name\r\n                            }\r\n                        }).map((list, search) => (\r\n                            <span className=\"pinSpan\">\r\n                                <FontAwesomeIcon icon={faThumbtack} className=\"pinIcon\" />\r\n                                <div className=\"list\" key={list.id} onClick={this.listItemOnClick} onClickCapture={() => this.setState({ indexOfList: list.id })} key={list.id} index={list.id}  >\r\n                                    <h3>{list.name}</h3>\r\n                                    <p> created today</p>\r\n                                    <span className=\"tasksDone\">\r\n                                        <p> Tasks: {list.task.length}</p>\r\n                                        <FontAwesomeIcon icon={faCheckSquare} className=\"doneIcon\" />\r\n                                        <p>/{list.task.length} all</p>\r\n                                    </span>\r\n                                </div>\r\n                                <FontAwesomeIcon icon={faThumbtack} className=\"pinIcon\" />\r\n                            </span>\r\n                        ))}\r\n                        {viewList && <ListView toggleListView={this.toggleListView} index={indexOfList} renderToDo={renderToDo} deleteList={this.deleteList} />}\r\n                    </div>\r\n                </div>\r\n                <span className=\"addNewList\">\r\n                    <FontAwesomeIcon icon={faPlus} className=\"plusList\" onClick={this.addList} />\r\n                    <p className=\"plusListDescription\"> add new list </p>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ToDo;","import React from 'react';\nimport './App.css';\nimport ListView from './components/ListView/ListView';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport ToDo from './components/ToDo/ToDo';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginView: true,\n      loggedIn: false,\n      viewList: false,\n    }\n    this.toggleLoginAndRegister = this.toggleLoginAndRegister.bind(this);\n  }\n\n  toggleLoginAndRegister = () => {\n    if (this.state.loginView === true) {\n      this.setState({\n        loginView: false,\n      });\n    } else {\n      this.setState({\n        loginView: true,\n      });\n    }\n  }\n\n  logIn = () => {\n    if(this.state.loggedIn === false){\n      this.setState({\n      loggedIn: true,\n    })\n  } else {\n    this.setState({\n      loggedIn: false,\n    })\n  }\n  }\n\n\n  render() {\n    const { loginView, loggedIn, viewList } = this.state;\n    return (\n      <div className=\"App\">\n        {loginView && !loggedIn && <Login toggle={this.toggleLoginAndRegister} logged={this.logIn} />}\n        {!loginView && !loggedIn && <Register toggle={this.toggleLoginAndRegister} />}\n        {loggedIn && <ToDo logged={this.logIn} toggleListView={this.toggleListView} viewList={this.viewList}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}